CREATE TABLE customer
(
customer_id  NUMBER(10) GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
user_name  VARCHAR2(30) NOT NULL,
password VARCHAR2(30) NOT NULL,
 first_name VARCHAR(30) NOT NULL,
 last_name VARCHAR2(30) NOT NULL,
address VARCHAR2(250) NOT NULL,
 phone NUMBER(10) NOT NULL UNIQUE,
  email VARCHAR2(30) NOT NULL UNIQUE); 
  
  
 CREATE TABLE order_details
 (
 order_id NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
 customer_id NUMBER(10) NOT NULL,
 status VARCHAR2(20) DEFAULT 'processing',
 order_date DATE DEFAULT sysdate,
 FOREIGN KEY (customer_id)REFERENCES customer(customer_id));
 
 
 CREATE TABLE cart
 (
 order_id NUMBER(4) NOT NULL,
 product_id NUMBER(4)NOT NULL,
 quantity NUMBER(3) NOT NULL,
 price NUMBER(10) NOT NULL,
 FOREIGN KEY (product_id)REFERENCES product(products_id),
 FOREIGN KEY (order_id)REFERENCES order_details(order_id)
 );
--DROP TABLE order_items cascade constraints;
  --DROP TABLE orders cascade constraints;
 
 
 CREATE TABLE product
 (
 products_name VARCHAR(20) NOT NULL,
 products_id NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
 standard_cost NUMBER(10) NOT NULL
 status varchar2(1) DEFAULT 'y');
 --------------------------------------------------------------------------------------------------------------------------------
 SELECT * FROM cart;
 SELECT * FROM product;
 SELECT * FROM order_details;
 SELECT * FROM customer;
 ----------------one day sale
 create view today_product_sale as
 select  
 p.products_name
 ,c.price
 ,sum(c.quantity) as quantity
 ,(c.price*sum(c.quantity)) as cost
 from order_details d
 join cart c on d.order_id=c.order_id
 join product p on p.products_id=c.product_id
 group by(p.products_name,c.price,trunc(d.order_date))
 having trunc(d.order_date)=trunc(sysdate);
 --------------------------------------------- total one day
 create view today_product_amount_sale as
   select  
 sum(c.price*sum(c.quantity)) as cost
 from order_details d
 join cart c on d.order_id=c.order_id
 join product p on p.products_id=c.product_id
 group by(p.products_name,c.price,trunc(d.order_date))
 having trunc(d.order_date)=trunc(sysdate);
 ------------------------------------------- last 7 days 
 create view week_product_sale as
 select  
 p.products_name
 ,c.price
 ,sum(c.quantity) as quantity
 ,(c.price*sum(c.quantity)) as cost
 from order_details d
 join cart c on d.order_id=c.order_id
 join product p on p.products_id=c.product_id
 group by(p.products_name,c.price,trunc(d.order_date))
 having trunc(d.order_date) between trunc(sysdate-7) and trunc(sysdate ) ;

----------------------------------------------------------last 7 days amount
create view week_product_amount_sale as
 select  
 sum(c.price*sum(c.quantity)) as cost
 from order_details d
 join cart c on d.order_id=c.order_id
 join product p on p.products_id=c.product_id
 group by(p.products_name,c.price,trunc(d.order_date))
 having trunc(d.order_date) between trunc(sysdate-7) and trunc(sysdate ) ;
 SELECT * FROM week_product_amount_sale;
 select* from week_product_sale;
 select * from today_product_amount_sale;
 SELECT * FROM today_product_sale;
 --------------------------------------customer order
  SELECT order_id,status,order_date FROM order_details where customer_id=2;
  
 -------------------------------------------- order view 
  select p.products_name,c.quantity,c.price,(c.quantity*c.price) as cost from order_details o
  join cart c on o.order_id =c.order_id
  join product p on p.products_id=c.product_id where o.order_id=3;
  -------------------------------------------------------------order cost
  select sum(c.quantity*c.price) as cost from order_details o
  join cart c on o.order_id =c.order_id
  join product p on p.products_id=c.product_id where o.order_id=3;
  ---------------------------------------------------
  select p.products_name,c.quantity,c.price,(c.quantity*c.price) as cost from order_details o join cart c on o.order_id =c.order_id join product p on p.products_id=c.product_id where o.order_id=1;
  
  
  
  